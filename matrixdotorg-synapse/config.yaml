name: "Matrix.org Synapse"
description: >-
  Pretty bare-bones add-on wrapper for the matrixdotorg/synapse Dockerhub container
url: "https://hub.docker.com/r/matrixdotorg/synapse"
version: "0.0.9"
slug: "matrixdotorg-synapse"
arch:
  # - aarch64
  - amd64
  # - armhf
  # - armv7
  # - i386
map:
  # Makes sense to store the signing key in /ssl
  - ssl:ro
  # Better spot for storing the media files
  - share:rw
schema:
  server_name: str
  default_user: str
  default_userpass: password

  media_store_path: str

  autofill_appservices: bool

  registration_shared_secret: password?
  macaroon_secret_key: password?
  postgress_password: password?

  homeserver.yaml: str
options:
  server_name: null
  default_user: null
  default_userpass: "CorrectBatteryHorseStaple"

  media_store_path: "/share/matrix_media"

  autofill_appservices: true

  #registration_shared_secret: ""
  #macaroon_secret_key: ""
  #postgress_password: ""

  homeserver.yaml: |
    ### This is largely copied directly from the default /conf/homeserver.yaml template,
    ## Server ##
    server_name: {server_name}
    pid_file: /homeserver.pid
    web_client: False
    soft_file_limit: 0
    log_config: "/data/{server_name}.log.config"

    ## Ports ##
    listeners:
      - port: 8008
        tls: false
        bind_addresses: ['::']
        type: http
        x_forwarded: true
        resources:
          - names: [client]
            compress: true
          - names: [federation]
            compress: false

    ## Database ##
    # FIXME: Make start-optionsjson.py support a URL similar to how the mautrix-facebook appservice works
    # # Sample PostgreSQL config for use with https://github.com/Expaso/hassos-addons/tree/master/timescaledb
    # # This requires manually creating the DB & user with something like this:
    # # $ psql --user postgres -c "DO $$ begin IF EXISTS (SELECT FROM pg_catalog.pg_roles WHERE rolname = 'synapse') THEN RAISE NOTICE 'Synapse role already exists. Skipping.'; ELSE CREATE ROLE synapse WITH PASSWORD 'CorrectBatteryHorseStaple LOGIN CREATEDB'; END IF; end $$"
    # # $ psql --user postgres -c "CREATE DATABASE synapse LOCALE = 'C' ENCODING = 'UTF8' TEMPLATE = 'template0' OWNER = 'synapse'"
    # database:
    #   name: "psycopg2"
    #   args:
    #     user: "synapse"
    #     password: "{postgres_password}"
    #     # password: "CorrectBatteryHorseStaple"
    #     database: "synapse"
    #     host: "77b2833f-timescaledb"
    #     port: 5432
    #     cp_min: 5
    #     cp_max: 10
    database:
      name: "sqlite3"
      args:
        database: "/data/homeserver.db"

    ## Performance ##
    event_cache_size: "10K"

    ## Ratelimiting ##
    rc_messages_per_second: 0.2
    rc_message_burst_count: 10.0
    federation_rc_window_size: 1000
    federation_rc_sleep_limit: 10
    federation_rc_sleep_delay: 500
    federation_rc_reject_limit: 50
    federation_rc_concurrent: 3

    ## Files ##
    media_store_path: {media_store_path}
    max_upload_size: "50M"
    max_image_pixels: "32M"
    dynamic_thumbnails: false
    # List of thumbnail to precalculate when an image is uploaded.
    thumbnail_sizes:
    - width: 32
      height: 32
      method: crop
    - width: 96
      height: 96
      method: crop
    - width: 320
      height: 240
      method: scale
    - width: 640
      height: 480
      method: scale
    - width: 800
      height: 600
      method: scale
    url_preview_enabled: False
    max_spider_size: "10M"

    ## Registration ##
    enable_registration: False
    registration_shared_secret: {registration_shared_secret}
    bcrypt_rounds: 12
    allow_guest_access: False
    enable_group_creation: true

    ## Metrics ###
    # enable_metrics: True
    # report_stats: True
    enable_metrics: False
    report_stats: False

    ## API Configuration ##
    # app_service_config_files: DO NOT SET. Use autofill_appservices instead
    # FIXME: What actually is this? Removing it doesn't make things crash, so I think just remove it.
    macaroon_secret_key: {macaroon_secret_key}
    expire_access_token: False

    ## Signing Keys ##
    signing_key_path: "/ssl/{server_name}.signing.key"
    old_signing_keys: {{}}
    key_refresh_interval: "1d" # 1 Day.

    # The trusted servers to download signing keys from.
    trusted_key_servers:
      - server_name: matrix.org
        verify_keys:
          "ed25519:auto": "Noi6WqcDj0QmPxCNQqgezwTlBKrfqehY1u2FyWP9uYw"  # Public key, *not* a secret

    password_config:
       enabled: true

## Possible environment variables
# Mandatory config options:
# * SYNAPSE_SERVER_NAME
# * SYNAPSE_REPORT_STATS
# Known optional config options:
# * SYNAPSE_WORKER
# * SYNAPSE_CONFIG_DIR  # Should stay with default /data
# * SYNAPSE_CONFIG_PATH  # Should stay with default $SYNAPSE_CONFIG_DIR/homeserver.yaml
# * SYNAPSE_DATA_DIR  # Should stay with default /data
# * SYNAPSE_REGISTRATION_SHARED_SECRET  # DO NOT set this
# * SYNAPSE_ENABLE_REGISTRATION  # DO set this
# * SYNAPSE_MACAROON_SECRET_KEY  # DO NOT set this
# * SYNAPSE_HTTP_PORT  # default 8008
# * SYNAPSE_EVENT_CACHE_SIZE  # default '10K'
# * SYNAPSE_MAX_UPLOAD_SIZE  # default '50M'
# * SYNAPSE_ALLOW_GUEST  # default False
# * SYNAPSE_LOG_LEVEL  # Beware of setting this to DEBUG as that will put sensitive info in the logs
# * LOG_FILE_PATH  # Don't bother messing with this, the logs go out on the console anyway
# * SYNAPSE_LOG_SENSITIVE  # DO NOT set this, it lets sensitive info get into the logs
# * SYNAPSE_NO_TLS
# Recaptcha
# * SYNAPSE_RECAPTCHA_PUBLIC_KEY
# * SYNAPSE_RECAPTCHA_PRIVATE_KEY
# TURN
# * SYNAPSE_TURN_URIS
# * SYNAPSE_TURN_SECRET
# # Only for Postgres support
# * POSTGRES_PASSWORD
# * POSTGRES_USER  # default 'synapse'
# * POSTGRES_DB  # default 'synapse'
# * POSTGRES_HOST  # default 'db'
# * POSTGRES_PORT  # default '5432'
